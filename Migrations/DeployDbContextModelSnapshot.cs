// <auto-generated />
using System;
using DeployWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeployWeb.Migrations
{
    [DbContext(typeof(DeployDbContext))]
    partial class DeployDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("DeployWeb.Data.Model.Commit", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Added")
                        .HasColumnType("TEXT");

                    b.Property<long?>("AuthorId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CommitterId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<long>("PayloadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Removed")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CommitterId");

                    b.HasIndex("PayloadId")
                        .IsUnique();

                    b.ToTable("Commits");
                });

            modelBuilder.Entity("DeployWeb.Data.Model.Payload", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Commits")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ref")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Payloads");
                });

            modelBuilder.Entity("DeployWeb.Data.Model.PayloadUser", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<long>("PayloadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PayloadId")
                        .IsUnique();

                    b.ToTable("PayloadUsers");
                });

            modelBuilder.Entity("DeployWeb.Data.Model.Repository", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Full_name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<long>("PayloadId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PayloadId")
                        .IsUnique();

                    b.ToTable("Repositorys");
                });

            modelBuilder.Entity("DeployWeb.Data.Model.Commit", b =>
                {
                    b.HasOne("DeployWeb.Data.Model.PayloadUser", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("DeployWeb.Data.Model.PayloadUser", "Committer")
                        .WithMany()
                        .HasForeignKey("CommitterId");

                    b.HasOne("DeployWeb.Data.Model.Payload", null)
                        .WithOne("Head_commit")
                        .HasForeignKey("DeployWeb.Data.Model.Commit", "PayloadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Committer");
                });

            modelBuilder.Entity("DeployWeb.Data.Model.PayloadUser", b =>
                {
                    b.HasOne("DeployWeb.Data.Model.Payload", null)
                        .WithOne("Pusher")
                        .HasForeignKey("DeployWeb.Data.Model.PayloadUser", "PayloadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DeployWeb.Data.Model.Repository", b =>
                {
                    b.HasOne("DeployWeb.Data.Model.Payload", null)
                        .WithOne("Repository")
                        .HasForeignKey("DeployWeb.Data.Model.Repository", "PayloadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DeployWeb.Data.Model.Payload", b =>
                {
                    b.Navigation("Head_commit");

                    b.Navigation("Pusher");

                    b.Navigation("Repository");
                });
#pragma warning restore 612, 618
        }
    }
}
