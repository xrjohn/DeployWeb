// <auto-generated />
using System;
using DeployWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeployWeb.Migrations
{
    [DbContext(typeof(DeployDbContext))]
    [Migration("20210225103316_ModifyTable")]
    partial class ModifyTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("DeployWeb.Data.Model.Branch", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("BranchName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Ref")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("RepositoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("t_branch");
                });

            modelBuilder.Entity("DeployWeb.Data.Model.Commit", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Added")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorEmail")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorUserName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CommitterEmail")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CommitterName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CommitterUserName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Modified")
                        .HasColumnType("TEXT");

                    b.Property<string>("Removed")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("t_commit");
                });

            modelBuilder.Entity("DeployWeb.Data.Model.Payload", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Action")
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("BranchId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("CommitIds")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Head_commitId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PusherEmail")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PusherName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Ref")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("RepositoryId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("t_payload");
                });

            modelBuilder.Entity("DeployWeb.Data.Model.Repository", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Full_name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("t_repository");
                });

            modelBuilder.Entity("DeployWeb.Data.Model.Solution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BranchId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FtpAccount")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FtpAddress")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FtpPassword")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("SolutionName")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("t_solution");
                });

            modelBuilder.Entity("DeployWeb.Data.Model.TranscationRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddLists")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("FromSolutionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ModifyLists")
                        .HasColumnType("TEXT");

                    b.Property<string>("RemoveLists")
                        .HasColumnType("TEXT");

                    b.Property<bool>("SoftRemove")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ToSolutionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("t_transcationrecord");
                });
#pragma warning restore 612, 618
        }
    }
}
